from detectron2 import model_zoo
from detectron2.config import CfgNode as CN


def add_fooc_config(cfg):
    _C = cfg

    _C.DATASETS.ROOT_DIR = "/lhome/peizhli/datasets"
    _C.DATASETS.EQUAL_FREQUENCY = False

    _C.DATALOADER.NUM_WORKERS = 2
    _C.DATALOADER.MAPPER_TRAIN = "DatasetMapperWrapper"
    _C.DATALOADER.MAPPER_TEST = "ExtendedDatasetMapper"
    _C.DATALOADER.SAMPLER_TRAIN = "EquallyDatasetsTrainingSampler"
    _C.DATALOADER.SELECTION_TYPE = "simple"
    _C.DATALOADER.CLIP_BOXES_TO_IMAGE_SIZE = True

    _C.MODEL.IMG_FDA_ON = False
    _C.MODEL.INSTANCE_FDA_ON = False
    _C.MODEL.FDA_CONSISTENCY_REGULARIZATION_ON = False

    _C.MODEL.VGG = CN()
    _C.MODEL.VGG.OUT_FEATURES = ["conv5_3"]

    # _C.MODEL.WEIGHTS = "https://download.pytorch.org/models/vgg16-397923af.pth"
    # _C.MODEL.WEIGHTS = "/lhome/peizhli/projects/model_zoo/vgg16-397923af.pth"
    _C.MODEL.WEIGHTS = ""

    _C.MODEL.IMG_FDA_HEAD = CN()
    _C.MODEL.IMG_FDA_HEAD.NAME = "IMG_FDA_HEAD"
    _C.MODEL.IMG_FDA_HEAD.IN_FEATURES = ["conv5_3"]
    _C.MODEL.IMG_FDA_HEAD.GRL_GAMMA = 0.1
    _C.MODEL.IMG_FDA_HEAD.LOSS_LAMBDA = 1.0
    _C.MODEL.IMG_FDA_HEAD.LOSS_TYPE = "cross_entropy"
    _C.MODEL.IMG_FDA_HEAD.FOCAL_GAMMA = 3.
    _C.MODEL.IMG_FDA_HEAD.SN = True

    _C.MODEL.INSTANCE_FDA_HEAD = CN()
    _C.MODEL.INSTANCE_FDA_HEAD.NAME = "INSTANCE_FDA_HEAD"
    _C.MODEL.INSTANCE_FDA_HEAD.GRL_GAMMA = 0.1
    _C.MODEL.INSTANCE_FDA_HEAD.LOSS_LAMBDA = 1.0
    _C.MODEL.INSTANCE_FDA_HEAD.LOSS_TYPE = "cross_entropy"
    _C.MODEL.INSTANCE_FDA_HEAD.FOCAL_GAMMA = 3.
    _C.MODEL.INSTANCE_FDA_HEAD.SN = True
    _C.MODEL.INSTANCE_FDA_HEAD.POOLER_RESOLUTION = 14
    _C.MODEL.INSTANCE_FDA_HEAD.POOLER_SAMPLING_RATIO = 0
    _C.MODEL.INSTANCE_FDA_HEAD.POOLER_TYPE = "ROIAlignV2"
    _C.MODEL.INSTANCE_FDA_HEAD.FILTER_FOREGROUND = False
    _C.MODEL.INSTANCE_FDA_HEAD.USE_REFINED = False

    _C.MODEL.FDA_CONSISTENCY_REGULARIZATION = CN()
    _C.MODEL.FDA_CONSISTENCY_REGULARIZATION.LOSS_WEIGHT = 1.
    _C.MODEL.FDA_CONSISTENCY_REGULARIZATION.LOSS_NORM = "l2"
    _C.MODEL.FDA_CONSISTENCY_REGULARIZATION.SIZE_AVERAGE = True

    _C.MODEL.ROI_HEADS.BATCH_SIZE_PER_IMAGE = 128
    # No. of classes = ['person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle']
    _C.MODEL.ROI_HEADS.NUM_CLASSES = 8

    _C.FOOC = CN()
    _C.FOOC.NUM_DOMAINS = 2
    _C.FOOC.AUGMENTATIONS = True
    _C.FOOC.TASK = "domain_adaptation"
    _C.FOOC.BOX_EVAL = True
    _C.FOOC.BOX_EVAL_RESIZE = 1.

    _C.FOOC.SOURCE = CN()
    _C.FOOC.SOURCE.COMPUTE_DET_LOSS = True

    _C.FOOC.TARGET = CN()
    _C.FOOC.TARGET.COMPUTE_DET_LOSS = False

    _C.FOOC.DATASETS = CN()
    _C.FOOC.DATASETS.ONLINE_LOADING = False
    _C.FOOC.DATASETS.SOURCE_TARGET_EQUAL_FREQUENCY = True

    _C.FOOC.DATASETS.CITYSCAPES = CN()
    _C.FOOC.DATASETS.CITYSCAPES.SUBSAMPLE = -1
    _C.FOOC.DATASETS.CITYSCAPES.DOMAIN = "source"
    _C.FOOC.DATASETS.CITYSCAPES.LABEL_SPACE = "Cityscapes"
    _C.FOOC.DATASETS.CITYSCAPES.EVALUATOR_TYPE = "coco"
    _C.FOOC.DATASETS.CITYSCAPES.LOAD_MASKS = True

    _C.FOOC.DATASETS.FOGGYCITYSCAPES = CN()
    _C.FOOC.DATASETS.FOGGYCITYSCAPES.SUBSAMPLE = -1
    _C.FOOC.DATASETS.FOGGYCITYSCAPES.DOMAIN = "target"
    _C.FOOC.DATASETS.FOGGYCITYSCAPES.LABEL_SPACE = "Cityscapes"
    _C.FOOC.DATASETS.FOGGYCITYSCAPES.EVALUATOR_TYPE = "coco"
    _C.FOOC.DATASETS.FOGGYCITYSCAPES.LOAD_MASKS = True
    _C.FOOC.DATASETS.FOGGYCITYSCAPES.BETA = 0.01

    _C.FOOC.DATASETS.SIM10K = CN()
    _C.FOOC.DATASETS.SIM10K.SUBSAMPLE = -1
    _C.FOOC.DATASETS.SIM10K.DOMAIN = "target"
    # "Sim10k" or "Sim10kCityscapesCommon" (only used for cross-domain object detection test)
    _C.FOOC.DATASETS.SIM10K.LABEL_SPACE = "Sim10kCityscapesCommon"
    _C.FOOC.DATASETS.SIM10K.EVALUATOR_TYPE = "coco"
    _C.FOOC.DATASETS.SIM10K.LOAD_MASKS = True

    _C.FOOC.DATASETS.KITTI = CN()
    _C.FOOC.DATASETS.KITTI.SUBSAMPLE = -1
    _C.FOOC.DATASETS.KITTI.DOMAIN = "target"
    # "Kitti" or "KittiCityscapesCommon" (only used for cross-domain object detection test)
    _C.FOOC.DATASETS.KITTI.LABEL_SPACE = "KittiCityscapesCommon"
    _C.FOOC.DATASETS.KITTI.EVALUATOR_TYPE = "coco"
    # Kitti object challenge has no instance masks
    # _C.FOOC.DATASETS.KITTI.LOAD_MASKS = True
